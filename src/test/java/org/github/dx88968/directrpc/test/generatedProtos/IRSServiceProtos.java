// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/protos/Server2.proto

package org.github.dx88968.directrpc.test.generatedProtos;

public final class IRSServiceProtos {
  private IRSServiceProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface checkTaxRequestProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint64 ID = 1;
    boolean hasID();
    long getID();
  }
  public static final class checkTaxRequestProto extends
      com.google.protobuf.GeneratedMessage
      implements checkTaxRequestProtoOrBuilder {
    // Use checkTaxRequestProto.newBuilder() to construct.
    private checkTaxRequestProto(Builder builder) {
      super(builder);
    }
    private checkTaxRequestProto(boolean noInit) {}
    
    private static final checkTaxRequestProto defaultInstance;
    public static checkTaxRequestProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public checkTaxRequestProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.internal_static_checkTaxRequestProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.internal_static_checkTaxRequestProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint64 ID = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long iD_;
    public boolean hasID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getID() {
      return iD_;
    }
    
    private void initFields() {
      iD_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, iD_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, iD_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto)) {
        return super.equals(obj);
      }
      org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto other = (org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto) obj;
      
      boolean result = true;
      result = result && (hasID() == other.hasID());
      if (hasID()) {
        result = result && (getID()
            == other.getID());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }
    
    @java.lang.Override
    public int hashCode() {
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasID()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getID());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      return hash;
    }
    
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.internal_static_checkTaxRequestProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.internal_static_checkTaxRequestProto_fieldAccessorTable;
      }
      
      // Construct using generatedProtos.IRSServiceProtos.checkTaxRequestProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        iD_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto.getDescriptor();
      }
      
      public org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto getDefaultInstanceForType() {
        return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto.getDefaultInstance();
      }
      
      public org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto build() {
        org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto buildPartial() {
        org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto result = new org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iD_ = iD_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto) {
          return mergeFrom((org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto other) {
        if (other == org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto.getDefaultInstance()) return this;
        if (other.hasID()) {
          setID(other.getID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasID()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              iD_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 ID = 1;
      private long iD_ ;
      public boolean hasID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getID() {
        return iD_;
      }
      public Builder setID(long value) {
        bitField0_ |= 0x00000001;
        iD_ = value;
        onChanged();
        return this;
      }
      public Builder clearID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iD_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:checkTaxRequestProto)
    }
    
    static {
      defaultInstance = new checkTaxRequestProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:checkTaxRequestProto)
  }
  
  public interface checkTaxResponseProtoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint64 resultCode = 1;
    boolean hasResultCode();
    long getResultCode();
    
    // optional string message = 2;
    boolean hasMessage();
    String getMessage();
    
    // optional uint64 tax = 3;
    boolean hasTax();
    long getTax();
  }
  public static final class checkTaxResponseProto extends
      com.google.protobuf.GeneratedMessage
      implements checkTaxResponseProtoOrBuilder {
    // Use checkTaxResponseProto.newBuilder() to construct.
    private checkTaxResponseProto(Builder builder) {
      super(builder);
    }
    private checkTaxResponseProto(boolean noInit) {}
    
    private static final checkTaxResponseProto defaultInstance;
    public static checkTaxResponseProto getDefaultInstance() {
      return defaultInstance;
    }
    
    public checkTaxResponseProto getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.internal_static_checkTaxResponseProto_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.internal_static_checkTaxResponseProto_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint64 resultCode = 1;
    public static final int RESULTCODE_FIELD_NUMBER = 1;
    private long resultCode_;
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getResultCode() {
      return resultCode_;
    }
    
    // optional string message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 tax = 3;
    public static final int TAX_FIELD_NUMBER = 3;
    private long tax_;
    public boolean hasTax() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getTax() {
      return tax_;
    }
    
    private void initFields() {
      resultCode_ = 0L;
      message_ = "";
      tax_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasResultCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, resultCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMessageBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, tax_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, resultCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMessageBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, tax_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto)) {
        return super.equals(obj);
      }
      org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto other = (org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto) obj;
      
      boolean result = true;
      result = result && (hasResultCode() == other.hasResultCode());
      if (hasResultCode()) {
        result = result && (getResultCode()
            == other.getResultCode());
      }
      result = result && (hasMessage() == other.hasMessage());
      if (hasMessage()) {
        result = result && getMessage()
            .equals(other.getMessage());
      }
      result = result && (hasTax() == other.hasTax());
      if (hasTax()) {
        result = result && (getTax()
            == other.getTax());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }
    
    @java.lang.Override
    public int hashCode() {
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasResultCode()) {
        hash = (37 * hash) + RESULTCODE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getResultCode());
      }
      if (hasMessage()) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
      }
      if (hasTax()) {
        hash = (37 * hash) + TAX_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getTax());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      return hash;
    }
    
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.internal_static_checkTaxResponseProto_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.internal_static_checkTaxResponseProto_fieldAccessorTable;
      }
      
      // Construct using generatedProtos.IRSServiceProtos.checkTaxResponseProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        resultCode_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        tax_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.getDescriptor();
      }
      
      public org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto getDefaultInstanceForType() {
        return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.getDefaultInstance();
      }
      
      public org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto build() {
        org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto buildPartial() {
        org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto result = new org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resultCode_ = resultCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tax_ = tax_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto) {
          return mergeFrom((org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto other) {
        if (other == org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.getDefaultInstance()) return this;
        if (other.hasResultCode()) {
          setResultCode(other.getResultCode());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasTax()) {
          setTax(other.getTax());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasResultCode()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              resultCode_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              message_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tax_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 resultCode = 1;
      private long resultCode_ ;
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getResultCode() {
        return resultCode_;
      }
      public Builder setResultCode(long value) {
        bitField0_ |= 0x00000001;
        resultCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resultCode_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string message = 2;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
      }
      
      // optional uint64 tax = 3;
      private long tax_ ;
      public boolean hasTax() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getTax() {
        return tax_;
      }
      public Builder setTax(long value) {
        bitField0_ |= 0x00000004;
        tax_ = value;
        onChanged();
        return this;
      }
      public Builder clearTax() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tax_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:checkTaxResponseProto)
    }
    
    static {
      defaultInstance = new checkTaxResponseProto(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:checkTaxResponseProto)
  }
  
  public static abstract class IRSService
      implements com.google.protobuf.Service {
    protected IRSService() {}
    
    public interface Interface {
      public abstract void checkTax(
          com.google.protobuf.RpcController controller,
          org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto request,
          com.google.protobuf.RpcCallback<org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new IRSService() {
        @java.lang.Override
        public  void checkTax(
            com.google.protobuf.RpcController controller,
            org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto request,
            com.google.protobuf.RpcCallback<org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto> done) {
          impl.checkTax(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.checkTax(controller, (org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void checkTax(
        com.google.protobuf.RpcController controller,
        org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto request,
        com.google.protobuf.RpcCallback<org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.checkTax(controller, (org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto)request,
            com.google.protobuf.RpcUtil.<org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.IRSService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void checkTax(
          com.google.protobuf.RpcController controller,
          org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto request,
          com.google.protobuf.RpcCallback<org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.class,
            org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto checkTax(
          com.google.protobuf.RpcController controller,
          org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto checkTax(
          com.google.protobuf.RpcController controller,
          org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_checkTaxRequestProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_checkTaxRequestProto_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_checkTaxResponseProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_checkTaxResponseProto_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030src/protos/Server2.proto\"\"\n\024checkTaxRe" +
      "questProto\022\n\n\002ID\030\001 \002(\004\"I\n\025checkTaxRespon" +
      "seProto\022\022\n\nresultCode\030\001 \002(\004\022\017\n\007message\030\002" +
      " \001(\t\022\013\n\003tax\030\003 \001(\0042G\n\nIRSService\0229\n\010check" +
      "Tax\022\025.checkTaxRequestProto\032\026.checkTaxRes" +
      "ponseProtoB)\n\017generatedProtosB\020IRSServic" +
      "eProtos\210\001\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_checkTaxRequestProto_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_checkTaxRequestProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_checkTaxRequestProto_descriptor,
              new java.lang.String[] { "ID", },
              org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto.class,
              org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxRequestProto.Builder.class);
          internal_static_checkTaxResponseProto_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_checkTaxResponseProto_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_checkTaxResponseProto_descriptor,
              new java.lang.String[] { "ResultCode", "Message", "Tax", },
              org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.class,
              org.github.dx88968.directrpc.test.generatedProtos.IRSServiceProtos.checkTaxResponseProto.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
